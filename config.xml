protected function execute(InputInterface $input, OutputInterface $output)
{
    $quoteCollection = $this->quoteCollectionFactory->create();
    $quoteIds = $quoteCollection->getAllIds();

    if (!empty($quoteIds)) {
        foreach ($quoteIds as $quoteId) {
            $output->writeln("Quote ID: " . $quoteId);

            // Load the quote by ID
            $quote = $this->loadQuoteById($quoteId);

            // Check if the quote exists
            if ($quote) {
                // Get quote items
                $quoteItems = $quote->getAllVisibleItems();

                foreach ($quoteItems as $quoteItem) {
                    // Access item information
                    $productName = $quoteItem->getProduct()->getName();
                    $productPrice = $quoteItem->getProduct()->getFinalPrice();
                    $quantity = $quoteItem->getQty();

                    $output->writeln("Product Name: " . $productName);
                    $output->writeln("Product Price: " . $productPrice);
                    $output->writeln("Quantity: " . $quantity);
                }
            } else {
                $output->writeln("Quote with ID " . $quoteId . " not found.");
            }
        }
    } else {
        $output->writeln("No quote IDs found.");
    }
}

/**
 * Load a quote by its ID.
 *
 * @param int $quoteId
 * @return \Magento\Quote\Model\Quote|false
 */
protected function loadQuoteById($quoteId)
{
    try {
        $quote = $this->quoteRepository->get($quoteId);
        return $quote;
    } catch (\Magento\Framework\Exception\NoSuchEntityException $e) {
        return false;
    }
}
